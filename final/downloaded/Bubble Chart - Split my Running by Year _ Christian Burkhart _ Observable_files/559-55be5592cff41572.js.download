"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[559],{10559:function(e,t,n){n.r(t),n.d(t,{default:function(){return f},guides:function(){return m}});var r=n(85893),s=n(94184),i=n.n(s),o=n(37497),a=n(54239),l=n(17905),c=n(99414),h=n(3338),d=n(47311),u=n(12447),p=n(67294);var x=n(19671),b=n(4242),j=n(21918);const g="https://static.observablehq.com",m=[{type:"first-steps",title:"First steps with Observable",image:"".concat(g,"/assets/guides/Rocket.png"),tags:["javascript","beginner"],steps:[{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"Welcome to Observable! To take your first step, replace the comment in the cell on the left with a simple calculation:"}),(0,r.jsx)(j.SU,{children:"1 + 2"}),(0,r.jsxs)("p",{children:["When you\u2019re done, click ",(0,r.jsx)(j.JO,{icon:h.Z,text:"Run cell"})," or hit ",(0,r.jsx)(j.R8,{words:!0,children:"Shift-Enter"})," to run the cell. You should then see the number 3 appear above the code."]}),(0,r.jsx)("p",{children:"This is the result of the calculation. On Observable, it appears above the code."})]}),start:74,end:75},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"Now let\u2019s give your cell a name. Naming a cell lets you refer to its value from other cells."}),(0,r.jsxs)("p",{children:["Type an ",(0,r.jsx)("code",{children:"x"})," followed by an equals sign ",(0,r.jsx)("code",{children:"="})," ","into your cell, like so:"]}),(0,r.jsx)(j.SU,{children:"x = 1 + 2"}),(0,r.jsxs)("p",{children:["Press ",(0,r.jsx)(j.R8,{words:!0,children:"Shift-Enter"})," again or click the"," ",(0,r.jsx)(j.JO,{icon:h.Z,text:"Run cell"})," button. Note that you can now see the name of the cell, ",(0,r.jsx)("code",{children:"x"}),", in addition to its value."]})]}),start:77,end:78},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"Now let\u2019s create an input to add some interaction."}),(0,r.jsxs)("p",{children:["Click the ",(0,r.jsx)(j.JO,{icon:d.ZP})," button under the existing cell on the left and type \u201crange\u201d into the menu, then click the"," ",(0,r.jsx)("b",{children:"Range"})," slider code snippet."]}),(0,r.jsx)("video",{autoPlay:!0,muted:!0,loop:!0,playsInline:!0,className:"w-100 br1 shadow-1",style:{marginBottom:-4},children:(0,r.jsx)("source",{src:"".concat("https://static.observablehq.com","/assets/guides/insert-range.mp4"),type:"video/mp4"})}),(0,r.jsxs)("p",{children:["This will insert a new cell into your notebook containing a piece of code to show a"," ",(0,r.jsx)(j.rU,{href:"/@observablehq/input-range",children:"range input"}),". It allows you to change the value of a variable."]}),(0,r.jsxs)("p",{children:["Rename the ",(0,r.jsx)("code",{children:"range"})," variable after the"," ",(0,r.jsx)("code",{children:"viewof"})," keyword to ",(0,r.jsx)("code",{children:"y"}),", so your code looks like this:"]}),(0,r.jsx)(j.SU,{children:'viewof y = Inputs.range([0, 100],\n            {label: "Amount", step: 1})'}),(0,r.jsxs)("p",{children:["Run your code by pressing ",(0,r.jsx)(j.R8,{words:!0,children:"Shift-Enter"})," or clicking the ",(0,r.jsx)(j.JO,{icon:h.Z,text:"Run cell"})," button."]})]}),start:80,end:82},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("p",{children:["You can refer to variables like ",(0,r.jsx)("code",{children:"x"})," and ",(0,r.jsx)("code",{children:"y"})," ","in your own code. Add another JavaScript cell by clicking the"," ",(0,r.jsx)(j.JO,{icon:d.ZP})," button and selecting ",(0,r.jsx)("b",{children:"JavaScript"})," or pressing ",(0,r.jsx)(j.R8,{words:!0,children:"Enter"}),"."]}),(0,r.jsxs)("p",{children:["Then add a simple calculation and run the cell by pressing"," ",(0,r.jsx)(j.R8,{words:!0,children:"Shift-Enter"})," or clicking"," ",(0,r.jsx)(j.JO,{icon:h.Z,text:"Run cell"}),":"]}),(0,r.jsx)(j.SU,{children:"x + y"}),(0,r.jsxs)("p",{children:["When you drag the slider, any cell referencing ",(0,r.jsx)("code",{children:"y"})," will re-run automatically and you'll see the result of the calculation update."]})]}),start:84,end:86},{content:e=>{let{dispatch:t,currentUser:n}=e;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"Well done, you\u2019ve taken your first steps on Observable! To keep a copy of this notebook in your own collection, click the button below."}),(0,r.jsx)(o.KM,{icon:c.Z,title:"Save to your notebooks","aria-label":"Save to your notebooks",text:"Save to your notebooks",onClick:()=>{t({type:"forkRequested",source:"guide",trigger:"click"})}}),(0,r.jsx)("p",{children:"Here are some more guides and other resources to check out:"}),(0,r.jsx)("p",{children:(0,r.jsxs)("ul",{className:"pl3",children:[(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:"/guide/athletes",children:"Explore data about Olympic athletes by creating charts"})}),(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:"/guide/electricity",children:"Analyze the relationship between temperature and electricity use in two citites"})}),(0,r.jsx)("li",{children:(0,r.jsxs)(j.rU,{href:"/@observablehq/getting-started",children:["Check out our ",(0,r.jsx)("em",{children:"Getting Started"})," notebook"]})}),(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:n?"/@".concat(n.login):"/",children:"Go back to your home page"})})]})})]})},start:88,end:90}]},{type:"athletes",title:"Explore Olympic athletes with charts",image:"".concat(g,"/assets/guides/Run.png"),tags:["histogram","inputs"],steps:[{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:(0,r.jsxs)("em",{children:["This guide builds on"," ",(0,r.jsx)(j.rU,{href:"/guide/first-steps",children:"First steps with Observable"}),"."]})}),(0,r.jsx)("p",{children:"Let\u2019s explore some data! You're probably familiar with the tabular view of data, like the one you see on the left. Each entry (or in our case, athlete) is represented by a row, and each column contains a different piece of data about them."}),(0,r.jsxs)("p",{children:["To see what data in Observable looks like, create a new JavaScript cell by clicking a ",(0,r.jsx)(j.JO,{icon:d.ZP})," button on the left and selecting ",(0,r.jsx)("b",{children:"JavaScript"}),". Then type the variable name"," ",(0,r.jsx)("code",{children:"olympians"})," into your new cell. This is one of the"," ",(0,r.jsx)(j.rU,{href:"/@observablehq/sample-datasets?collection=@observablehq/getting-data-in-and",children:"sample datasets from our standard library"}),"."]}),(0,r.jsx)(j.SU,{children:"olympians"}),(0,r.jsxs)("p",{children:["Run the cell by clicking ",(0,r.jsx)(j.JO,{icon:h.Z,text:"Run cell"})," or pressing ",(0,r.jsx)(j.R8,{words:!0,children:"Shift-Enter"}),". You will see the word"," ",(0,r.jsx)("code",{children:"Array"})," with a triangle \u25b6 next to it. An array is a group of objects that usually share the same structure. Click the triangle to expand the array into its objects, then click the triangle next to an object to see its properties."]}),(0,r.jsx)("p",{children:"We can think of each object in this array as one row in our table. Each named field within each object is a property of that object, which would appear in its respective column in a table."})]}),start:39,end:41},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"Which countries do the athletes in our dataset come from? Let\u2019s make a chart using a built-in code snippet, which conveniently uses this data."}),(0,r.jsxs)("p",{children:["Click a ",(0,r.jsx)(j.JO,{icon:d.ZP})," button again and type \u201cTop\u201d to find the ",(0,r.jsx)("b",{children:"Top 10 bar chart"}),", then click it or press"," ",(0,r.jsx)(j.R8,{words:!0,children:"Enter"}),". This inserts code using"," ",(0,r.jsx)(j.rU,{href:"/plot",children:"Observable\u2019s Plot library"})," into the notebook. Run it by pressing ",(0,r.jsx)(j.R8,{words:!0,children:"Shift-Enter"})," or clicking the ",(0,r.jsx)(j.JO,{icon:h.Z})," button."]}),(0,r.jsx)("p",{children:"We can now see the countries sending the most athletes to these particular Olympic Games: USA, Brazil, Germany, Australia, etc."})]}),start:43,end:45},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"How much do our athletes weigh? It might not be polite to ask them, but we can find out from our dataset."}),(0,r.jsxs)("p",{children:["Click the ",(0,r.jsx)(j.JO,{icon:d.ZP})," button again and find the"," ",(0,r.jsx)("em",{children:"Histogram"})," chart, either by typing the word or scrolling. Insert it into the notebook and run the cell as before. It also uses the ",(0,r.jsx)("code",{children:"olympians"})," dataset by default."]}),(0,r.jsxs)("p",{children:["A histogram shows you the distribution of weights (in kilograms). The horizontal axis is divided into weight ranges called"," ",(0,r.jsx)(j.rU,{href:"/@observablehq/plot-bin?collection=@observablehq/plot",children:"bins"}),". The height of each bar shows how many athletes in our dataset are in that weight range."]}),(0,r.jsx)("p",{children:"What other questions might we ask about this data?"})]}),start:47,end:49},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"An obvious follow-up question is how weight differs between the sexes. We can use the bars\u2019 fill color to break them up."}),(0,r.jsxs)("p",{children:["To do this, modify the second argument to ",(0,r.jsx)("code",{children:"Plot.binX"})," ","to read like this:"]}),(0,r.jsx)(j.SU,{children:'{x: "weight", fill: "sex"}'}),(0,r.jsxs)("p",{children:["To make sure we don't mix up which color represents which sex here, we'll need to add a color legend. Replace the closing square bracket ",(0,r.jsx)("code",{children:"]"})," of the marks array with the following piece of code:"]}),(0,r.jsx)(j.SU,{children:"],\ncolor: {\n    legend: true\n}"}),(0,r.jsx)("p",{children:"This includes the closing bracket as well as the crucial comma to keep the code syntactically correct. As before, don't forget to run the cell after you've modified it."})]}),start:51,end:53},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"This histogram shows us all data for all the athletes in our dataset, but surely there are differences between the disciplines. Let\u2019s create a way to pick the sport we want to see."}),(0,r.jsxs)("p",{children:["We have prepared a new variable for you called ",(0,r.jsx)("code",{children:"sports"}),". You can use it to create a drop-down control by clicking a"," ",(0,r.jsx)(j.JO,{icon:d.ZP})," button above the chart and typing \u201cselect\u201d to find and insert a select input."]}),(0,r.jsxs)("p",{children:["Change the default name of the variable, ",(0,r.jsx)("code",{children:"select"})," to"," ",(0,r.jsx)("code",{children:"sport"})," and replace the array of options",(0,r.jsx)("code",{children:'["A", "B"]'})," (including the square brackets) with the ",(0,r.jsx)("code",{children:"sports"})," variable. Finally, change the label to say \u201cSport:\u201d."]}),(0,r.jsx)("p",{children:"The completed cell should look like this:"}),(0,r.jsx)(j.SU,{children:'viewof sport = Inputs.select(sports,\n                    {label: "Sport:"})'}),(0,r.jsxs)("p",{children:["You can now select a sport, but the chart won't respond yet. To change that, replace the ",(0,r.jsx)("code",{children:"olympians"})," variable in the call to ",(0,r.jsx)("code",{children:"Plot.rectY"})," with ",(0,r.jsx)("code",{children:"sport"}),". It should look like this:"]}),(0,r.jsx)(j.SU,{children:'Plot.rectY(sport,\n        Plot.binX({y: "count"},\n          {x: "weight", fill: "sex"})),'}),(0,r.jsx)("p",{children:"Switch between different sports to see the shape of the distribution change!"})]}),start:58,end:64},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"Observable's Plot library tries to help us by re-scaling the chart when we switch the sport, but for easier comparison we want to keep the domain of the horizontal axis the same for all sports."}),(0,r.jsxs)("p",{children:["To do that, add the following after the closing curly brace of the"," ",(0,r.jsx)("code",{children:"color: "})," item and, importantly, a comma:"]}),(0,r.jsx)(j.SU,{children:"x: {\n    domain: [0, 200]\n}"}),(0,r.jsx)("p",{children:"You can now see the absolute difference in weight distribution more clearly, for example between weightlifting and gymnastics."})]}),start:66,end:68},{content:e=>{let{dispatch:t,currentUser:n}=e;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("p",{children:["This concludes our first exploration of data using"," ",(0,r.jsx)(j.rU,{href:"/plot",children:"Observable Plot"}),"."]}),(0,r.jsx)(o.KM,{icon:c.Z,title:"Save to your notebooks","aria-label":"Save to your notebooks",text:"Save to your notebooks",onClick:()=>{t({type:"forkRequested",source:"guide",trigger:"click"})}}),(0,r.jsx)("p",{children:"Here are some more guides and other resources to check out:"}),(0,r.jsx)("p",{children:(0,r.jsxs)("ul",{className:"pl3",children:[(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:"/guide/electricity",children:"Analyze the relationship between temperature and electricity use in two citites"})}),(0,r.jsx)("li",{children:(0,r.jsxs)(j.rU,{href:"/@observablehq/getting-started",children:["Check out our ",(0,r.jsx)("em",{children:"Getting Started"})," notebook"]})}),(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:n?"/@".concat(n.login):"/",children:"Go back to your home page"})})]})})]})},start:70,end:72}]},{type:"electricity",image:"".concat(g,"/assets/guides/Sun.png"),title:"Analyze electricity usage vs. temperature",tags:["scatterplot","csv"],steps:[{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:(0,r.jsxs)("em",{children:["This guide builds on"," ",(0,r.jsx)(j.rU,{href:"/guide/first-steps",children:"First steps with Observable"}),"."]})}),(0,r.jsx)("p",{children:"In this guide, we\u2019ll look at how electricity use varied with temperature over the year 2021 in two American cities: Los Angeles, CA and Seattle, WA."}),(0,r.jsxs)("p",{children:["We\u2019ve prepared the data for you and"," ",(0,r.jsx)(j.rU,{href:"/@observablehq/introduction-to-data#files",children:"attached it to this notebook"})," ","in CSV (comma-separated values) files. The"," ",(0,r.jsx)("code",{children:"power_vs_temperature"})," variable contains the combined data. Click the triangle \u25b6 next to the word"," ",(0,r.jsx)("code",{children:"Array"})," to inspect the temperature and electricity use values."]}),(0,r.jsxs)("p",{children:["Click on a ",(0,r.jsx)(j.JO,{icon:d.ZP})," button on the left and add a"," ",(0,r.jsx)("b",{children:"Multi-series line chart"})," by entering part of its name and then clicking on it or pressing ",(0,r.jsx)(j.R8,{words:!0,children:"Enter"}),". Rename the data variable from ",(0,r.jsx)("code",{children:"industries"})," to"," ",(0,r.jsx)("code",{children:"power_vs_temperature"})," and replace the y and z field names with ",(0,r.jsx)("code",{children:'y: "temperature"'})," and"," ",(0,r.jsx)("code",{children:'z: "city"'}),", respectively."]}),(0,r.jsxs)("p",{children:["The ",(0,r.jsx)("code",{children:"Plot.lineY"})," function call should now look like this:"]}),(0,r.jsx)(j.SU,{children:'Plot.lineY(power_vs_temperature,\n     {x: "date", y: "temperature",\n          z: "city"})'}),(0,r.jsx)("p",{children:"Once you run the cell, you\u2019ll see a line chart with one line for each city."})]}),start:116,end:118},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"We can improve this chart by coloring the lines and adding a legend."}),(0,r.jsxs)("p",{children:["First, change the ",(0,r.jsx)("code",{children:'z: "city"'})," assignment in the"," ",(0,r.jsx)("code",{children:"Plot.lineY"})," call to ",(0,r.jsx)("code",{children:'stroke: "city"'}),". This assigns different colors to the two cities. But which colors, and which one is which?"]}),(0,r.jsxs)("p",{children:["We want to specify the order of the colors and add a color legend. To do that, replace the closing square bracket ",(0,r.jsx)("code",{children:"]"})," with this code:"]}),(0,r.jsx)(j.SU,{children:'],\n  color: {\n    domain: ["Seattle", "Los Angeles"],\n    legend: true\n  }'}),(0,r.jsx)("p",{children:"Now we can see which city is which. Unsurprisingly, temperatures are generally higher in L.A. than Seattle, but summer temperatures weren\u2019t all that different in 2021."})]}),start:120,end:121},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"How does electricity use differ between these two cities? We can use the same chart, but use a variable to switch the measure we are looking at."}),(0,r.jsxs)("p",{children:["Click a ",(0,r.jsx)(j.JO,{icon:d.ZP})," button on the left and insert a"," ",(0,r.jsx)("b",{children:"Select"})," input into the notebook. Replace the name of the variable with ",(0,r.jsx)("code",{children:"measure"}),", the list of options with"," ",(0,r.jsx)("code",{children:'["temperature", "power"]'}),", and change the label to ",(0,r.jsx)("code",{children:"Measure"}),". It should look like this:"]}),(0,r.jsx)(j.SU,{children:'viewof measure =\n    Inputs.select(\n        ["temperature", "power"],\n            {label: "Measure"})'}),(0,r.jsxs)("p",{children:["In the cell containing the code for the chart, change the definition for the y axis from"," ",(0,r.jsx)("code",{children:'y: "temperature"'})," to ",(0,r.jsx)("code",{children:"y: measure"})," ","(note that you have to remove the quotation marks)."]}),(0,r.jsx)("p",{children:"Now when you change the measure in the dropdown, the chart will respond."}),(0,r.jsxs)("p",{children:["Adding some extra margin to the chart gives the axis labels more room. Add a comma after the closing curly brace ",(0,r.jsx)("code",{children:"}"})," ","of the ",(0,r.jsx)("code",{children:"color:"})," section, then add:"]}),(0,r.jsx)(j.SU,{children:"marginLeft: 50"})]}),start:123,end:127},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("p",{children:["Both temperature and electricity use can vary quite a bit from day to day. Let\u2019s smooth them out to make it easier to see trends and averages. We\u2019ll use a"," ",(0,r.jsx)(j.rU,{href:"/@observablehq/plot-window",children:"window function built into Plot"})," ","to do this, but we want to be able to control the amount of smoothing."]}),(0,r.jsxs)("p",{children:["Insert a ",(0,r.jsx)("b",{children:"Range"})," input, rename the variable to ",(0,r.jsx)("code",{children:"k"}),", change the range of values to ",(0,r.jsx)("code",{children:"[1, 20]"}),", and the label to ",(0,r.jsx)("code",{children:'"Smoothing"'}),"."]}),(0,r.jsx)(j.SU,{children:'viewof k = Inputs.range([1, 20],\n        {label: "Smoothing", step: 1})'}),(0,r.jsxs)("p",{children:["To make use of the smoothing amount ",(0,r.jsx)("code",{children:"k"}),", replace this part inside the ",(0,r.jsx)("code",{children:"Plot.lineY"})," function call"]}),(0,r.jsx)(j.SU,{children:'{x: "date", y: measure,\n            stroke: "city"}'}),"with the following:",(0,r.jsx)(j.SU,{children:'Plot.windowY({x: "date", y: measure,\n  k: k, reduce: "mean", stroke: "city"})'}),(0,r.jsx)("p",{children:"Now when you move the slider, the amount of smoothing in the chart will change."})]}),start:129,end:132},{content:()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("p",{children:["Line charts let us see temperature and electricity use separately, but how do they interact? A"," ",(0,r.jsx)(j.rU,{href:"/@observablehq/plot-dot",children:"scatterplot"})," will show us that."]}),(0,r.jsxs)("p",{children:["Insert a ",(0,r.jsx)("b",{children:"Scatterplot"})," snippet. Rename the default"," ",(0,r.jsx)("code",{children:"cars"})," variable to ",(0,r.jsx)("code",{children:"power_vs_temperature"}),", change the x mapping to ",(0,r.jsx)("code",{children:'"temperature"'})," and y to ",(0,r.jsx)("code",{children:'"power"'}),", and add a"," ",(0,r.jsx)("code",{children:'fill: "city"'})," item. The"," ",(0,r.jsx)("code",{children:"Plot.dot"})," function call should look like this:"]}),(0,r.jsx)(j.SU,{children:'Plot.dot(power_vs_temperature,\n  {x: "temperature", y: "power",\n    fill: "city"})'}),(0,r.jsx)("p",{children:"We also need to change colors again and add a color legend. We'll also add some space on the left again. Add the following after the closing square bracket, and don\u2019t forget the comma to separate them as well (you can also copy it from the line chart):"}),(0,r.jsx)(j.SU,{children:'color: {\n  domain: ["Seattle", "Los Angeles"],\n  legend: true\n},\nmarginLeft: 50'}),(0,r.jsx)("p",{children:"What does this chart tell you about the differences in climate and people's behavior between the two cities?"})]}),start:134,end:139},{content:e=>{let{dispatch:t,currentUser:n}=e;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"This concludes our introduction to creating line charts, as well as using advanced features such as windowing functions and variables to select data series."}),(0,r.jsx)(o.KM,{icon:c.Z,title:"Save to your notebooks","aria-label":"Save to your notebooks",text:"Save to your notebooks",onClick:()=>{t({type:"forkRequested",source:"guide",trigger:"click"})}}),(0,r.jsx)("p",{children:"Here are some more guides and other resources to check out:"}),(0,r.jsx)("p",{children:(0,r.jsxs)("ul",{className:"pl3",children:[(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:"/guide/athletes",children:"Explore data about Olympic athletes using bar charts and histograms"})}),(0,r.jsx)("li",{children:(0,r.jsxs)(j.rU,{href:"/@observablehq/getting-started",children:["Check out our ",(0,r.jsx)("em",{children:"Getting Started"})," notebook"]})}),(0,r.jsx)("li",{children:(0,r.jsx)(j.rU,{href:n?"/@".concat(n.login):"/",children:"Go back to your home page"})})]})})]})},start:141,end:143}]}];var f=(0,b.$j)((e=>{let{notebook:t,page:n,currentUser:r}=e;return{notebook:t,page:n,currentUser:r}}),(e=>({dispatch:e})))((e=>{let{notebook:t,page:{guide:n},dispatch:s,currentUser:c}=e;const{saveVersion:h}=t,d=m.find((e=>e.type===n));if(!d)throw new Error("guide not found: ".concat(n));const b=function(e,t){const{saveVersion:n}=t,r=e.steps.findIndex((e=>e.start<=n&&n<=e.end)),s=e.steps[r];if(!s)throw new Error("guide step not found: ".concat(n));return{stepNumber:r+1,step:s,previousStep:e.steps[r-1],nextStep:e.steps[r+1]}}(d,t),{stepNumber:j,step:g,previousStep:f,nextStep:w}=b,y=function(e){const t=(0,p.useRef)();return(0,p.useEffect)((()=>{t.current=e})),t.current}(j),v=(0,u.GS)("(max-width: 960px)",!1);return(0,p.useEffect)((()=>{(0,x.MR)((0,x.K)({type:"guide:view:stepChanged",data:{stepCurrent:j,stepPrevious:y},eventVersion:1,guide:d,notebook:t,currentUser:c}))}),[j]),(0,r.jsxs)("div",{className:"overflow-y-auto w-100",children:[(0,r.jsxs)("div",{className:"lh-title z-1 near-black pa3 bb bg-light-blue white b--light-silver br3 br--top flex items-center justify-between top-0 sticky",children:[(0,r.jsx)("div",{className:"f5 fw6",children:d.title}),(0,r.jsxs)("div",{className:i()("f7 flex-shrink-0",{pr4:v}),children:[j," of ",d.steps.length]})]}),(0,r.jsx)("div",{className:"pa3 pt0 near-black lh-copy",children:(0,r.jsx)(g.content,{dispatch:s,currentUser:c})}),(0,r.jsxs)("div",{className:"pa3 flex items-center justify-".concat(w?"between":"end"),children:[w&&(0,r.jsx)(o.kq,{text:h===g.start?"Show me":"Reset",onClick:()=>{h===g.start?((0,x.MR)((0,x.K)({type:"guide:view:showStep",data:{stepCurrent:j},guide:d,eventVersion:1,notebook:t,currentUser:c})),s({type:"loadVersion",version:g.end})):((0,x.MR)((0,x.K)({type:"guide:view:resetStep",data:{stepCurrent:j},guide:d,eventVersion:1,notebook:t,currentUser:c})),s({type:"loadVersion",version:g.start}))}}),(0,r.jsxs)("div",{className:"flex items-center",children:[(0,r.jsx)(o.kq,{icon:a.Z,disabled:!f,title:"Previous step","aria-label":"Previous step",text:"",onClick:()=>{f&&((0,x.MR)((0,x.K)({type:"guide:view:previousStep",data:{stepCurrent:j,stepTarget:j-1},guide:d,eventVersion:1,notebook:t,currentUser:c})),s({type:"loadVersion",version:f.start}))}}),(0,r.jsx)(o.KM,{icon:l.Z,disabled:!w,title:"Next step","aria-label":"Next step",text:"Next",iconOnRight:!0,onClick:()=>{w&&((0,x.MR)((0,x.K)({type:"guide:view:nextStep",data:{stepCurrent:j,stepTarget:j+1},guide:d,eventVersion:1,notebook:t,currentUser:c})),s({type:"loadVersion",version:w.start}))}})]})]})]})}))},21918:function(e,t,n){n.d(t,{BQ:function(){return u},JO:function(){return a.W},R8:function(){return h},SU:function(){return d},rU:function(){return p}});var r=n(85893),s=n(65988),i=n.n(s),o=n(64804),a=n(8052),l=n(33494),c=n(40178);function h(e){let{children:t,words:n}=e;const s=(0,c._9)(t),i=(0,c.ZP)(t);return(0,r.jsxs)("b",{title:(0,c._9)(t),children:[n&&s!==i?"".concat(s," "):null,i]})}function d(e){let{children:t}=e;return(0,r.jsxs)("div",{className:"jsx-cf5ebb03cb585b52 snippet relative",children:[(0,r.jsx)("pre",{className:"jsx-cf5ebb03cb585b52 f7 br2 pa2 overflow-x-auto bg-near-white",children:t}),(0,r.jsx)("button",{title:"Copy code",onClick:()=>navigator.clipboard.writeText(t),className:"jsx-cf5ebb03cb585b52 button absolute top-0 right-0 bg-near-white hover-bg-white pointer ba b--near-white br2 flex pa1 ma1",children:(0,r.jsx)(o.Z,{})}),(0,r.jsx)(i(),{id:"cf5ebb03cb585b52",children:"button.jsx-cf5ebb03cb585b52{visibility:hidden}.snippet.jsx-cf5ebb03cb585b52:hover button.jsx-cf5ebb03cb585b52{visibility:inherit}button.jsx-cf5ebb03cb585b52:active{background:var(--silver)}"})]})}function u(e){let{article:t,dispatch:n,children:s}=e;return(0,r.jsx)("a",{role:"link",tabIndex:0,className:"blue pointer underline-hover",onKeyPress:l.z_,onClick:()=>n({type:"openHelpArticle",article:t}),children:s})}function p(e){let{href:t,children:n}=e;return(0,r.jsx)("a",{target:"_blank",className:"blue",rel:"noopener noreferrer",href:t,children:n})}}}]);